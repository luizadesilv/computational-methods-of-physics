# -*- coding: utf-8 -*-
"""PlayingDice.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UsIk56MSVl1_f6SIj2y9f0_sLW-PaB5h

Considere que você joga dois dados de seis lados não viciados e soma o número de cada dado: Y = X1 +X2,
onde Y é a soma do resultado do dado 1, X1, e do dado 2, X2. Se fizermos esse experimento N vezes,
obteremos que a média é dada por: 
\begin{equation}
    \left ( Y \right ) = \frac{1}{N}\sum_{i=1}^{N}\left ( Yi \right )
\end{equation}
e o desvio padrão:
\begin{equation}
    \sigma = \sqrt{\frac{1}{N}\sum_{i=1}^{N}\left ( Yi - \left ( Y \right ) \right )^{2}}
\end{equation}
Escrever uma função que retorna uma estimativa do desvio padrão de um array y usando a equação (2);

Encontre a média e o desvio padrão da média para N=1000 jogadas dos dois dados utilizando as funções dos itens 2 e 3 acima. Compare os resultados com os obtidos usando os métodos numpy.mean() e numpy.std()}


Faça um histograma dos valores de Y obtidos a partir de N=1000 jogadas dos dois lados. Salve esse gráfico em formato PNG.
"""

from IPython.core.display import Javascript
from random import randint
import numpy as np
import math
import matplotlib.pyplot as plt
from matplotlib import colors

def soma(vezes):
  for n in range(0, vezes):
    dado1 = randint(1, 6)
    dado2 = randint(1, 6)
    soma_dados.append(dado1 + dado2)
  print(soma_dados)

  return soma_dados

def media(soma_dados, tipo=1):
  if(tipo==1):
    media = np.mean(soma_dados)
    print(f'Média Função: {media :.2f}')

  if(tipo==2):
    aux = 0
    for j in range(0, len(soma_dados)):
      aux += soma_dados[j]
    media = aux/len(soma_dados)
    print(f'Média Calculada: {media :.2f}')

  return media

def desvio(soma_dados, media, tipo=1):
  if(tipo==1):
    desvio = np.std(soma_dados)
    print(f'Desvio Função: {desvio :.2f}')  

  if(tipo==2):
    aux = 0
    for j in range(0, len(soma_dados)):
      aux += (soma_dados[j] - media)**2
    desvio = math.sqrt(aux/len(soma_dados))
    print(f'Desvio Calculado: {desvio :.2f}')

  return desvio

jogadas_random = randint(1, 20)
jogadas = 1000
soma_dados = []

soma_dados = soma(jogadas)

media2 = media(soma_dados,2)
media = media(soma_dados)

desvio2 = desvio(soma_dados, media, 2)
desvio = desvio(soma_dados, media)

fig, axis = plt.subplots(1,1, figsize = (5,5))
axis.hist(soma_dados,bins=10)
plt.title('Número de jogadas obtidas em cada soma')
plt.xlabel('número de jogadas')
plt.ylabel('soma dos dados')
plt.show()
plt.savefig('Histograma.png', format='png')